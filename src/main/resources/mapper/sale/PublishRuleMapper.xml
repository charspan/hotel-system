<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distinct.hotel.sale.dao.PublishRuleMapper">
	<resultMap id="BaseResultMap" type="com.distinct.hotel.sale.model.PublishRule">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sale_rule_id" property="saleRuleId" jdbcType="INTEGER" />
		<result column="begin_date" property="beginDate" jdbcType="DATE" />
		<result column="end_date" property="endDate" jdbcType="DATE" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="created" property="created" jdbcType="TIMESTAMP" />
		<result column="modified" property="modified" jdbcType="TIMESTAMP" />
		<result column="mod_user_id" property="modUserId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, sale_rule_id, begin_date, end_date, status, created, modified,
		mod_user_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.distinct.hotel.sale.model.PublishRuleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_publish_rule
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_publish_rule
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_publish_rule
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.distinct.hotel.sale.model.PublishRuleExample">
		delete from t_publish_rule
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.distinct.hotel.sale.model.PublishRule">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_publish_rule (sale_rule_id, begin_date, end_date,
		status, created, modified,
		mod_user_id)
		values (#{saleRuleId,jdbcType=INTEGER}, #{beginDate,jdbcType=DATE},
		#{endDate,jdbcType=DATE},
		#{status,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP},
		#{modUserId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.distinct.hotel.sale.model.PublishRule">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_publish_rule
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="saleRuleId != null">
				sale_rule_id,
			</if>
			<if test="beginDate != null">
				begin_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modified != null">
				modified,
			</if>
			<if test="modUserId != null">
				mod_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="saleRuleId != null">
				#{saleRuleId,jdbcType=INTEGER},
			</if>
			<if test="beginDate != null">
				#{beginDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				#{endDate,jdbcType=DATE},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				#{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="modUserId != null">
				#{modUserId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.distinct.hotel.sale.model.PublishRuleExample"
		resultType="java.lang.Integer">
		select count(*) from t_publish_rule
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_publish_rule
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.saleRuleId != null">
				sale_rule_id = #{record.saleRuleId,jdbcType=INTEGER},
			</if>
			<if test="record.beginDate != null">
				begin_date = #{record.beginDate,jdbcType=DATE},
			</if>
			<if test="record.endDate != null">
				end_date = #{record.endDate,jdbcType=DATE},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.created != null">
				created = #{record.created,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modified != null">
				modified = #{record.modified,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modUserId != null">
				mod_user_id = #{record.modUserId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_publish_rule
		set id = #{record.id,jdbcType=INTEGER},
		sale_rule_id = #{record.saleRuleId,jdbcType=INTEGER},
		begin_date = #{record.beginDate,jdbcType=DATE},
		end_date = #{record.endDate,jdbcType=DATE},
		status = #{record.status,jdbcType=VARCHAR},
		created = #{record.created,jdbcType=TIMESTAMP},
		modified = #{record.modified,jdbcType=TIMESTAMP},
		mod_user_id = #{record.modUserId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.distinct.hotel.sale.model.PublishRule">
		update t_publish_rule
		<set>
			<if test="saleRuleId != null">
				sale_rule_id = #{saleRuleId,jdbcType=INTEGER},
			</if>
			<if test="beginDate != null">
				begin_date = #{beginDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=DATE},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="modUserId != null">
				mod_user_id = #{modUserId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.distinct.hotel.sale.model.PublishRule">
		update t_publish_rule
		set sale_rule_id = #{saleRuleId,jdbcType=INTEGER},
		begin_date = #{beginDate,jdbcType=DATE},
		end_date = #{endDate,jdbcType=DATE},
		status = #{status,jdbcType=VARCHAR},
		created = #{created,jdbcType=TIMESTAMP},
		modified = #{modified,jdbcType=TIMESTAMP},
		mod_user_id = #{modUserId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- this is the method of selectedByUserId -->
	<select id="selectBySaleRuleId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_publish_rule
		where sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
	</select>
	<!-- this is the method of updateBySaleRuleId -->
	<update id="updateByRuleUserIdSelective" parameterType="com.distinct.hotel.sale.model.PublishRule">
		update t_publish_rule
		<set>
			<if test="saleRuleId != null">
				sale_rule_id = #{saleRuleId,jdbcType=INTEGER},
			</if>
			<if test="beginDate != null">
				begin_date = #{beginDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=DATE},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="modUserId != null">
				mod_user_id = #{modUserId,jdbcType=INTEGER},
			</if>
		</set>
		where sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
	</update>
	<!-- this is the method of deletebySaleRuleId -->
	<delete id="deleteBySaleRuleId" parameterType="java.lang.Integer">
		delete from t_publish_rule
		where sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
	</delete>
	<!-- this is the method of selectListByPublishRuleId -->
	<select id="selectListBySaleRuleId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_publish_rule
		where sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
	</select>

	<select id="returnMaxId" resultType="java.lang.Integer">
		select
		max(id)
		from
		t_publish_rule
	</select>
	<!-- this is the method of selectByIdList -->
<select id="selectByIdList" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_publish_rule
		where id = #{id,jdbcType=INTEGER}
	</select>
</mapper>
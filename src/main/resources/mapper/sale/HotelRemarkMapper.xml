<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distinct.hotel.sale.dao.HotelRemarkMapper" >
  <resultMap id="BaseResultMap" type="com.distinct.hotel.sale.model.HotelRemark" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sale_rule_id" property="saleRuleId" jdbcType="INTEGER" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="hotel_id" property="hotelId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
    <result column="mod_user_id" property="modUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sale_rule_id, provider_id, hotel_id, remark, created, modified, mod_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.distinct.hotel.sale.model.HotelRemarkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_hotel_remark
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hotel_remark
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_hotel_remark
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distinct.hotel.sale.model.HotelRemarkExample" >
    delete from t_hotel_remark
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distinct.hotel.sale.model.HotelRemark" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hotel_remark (sale_rule_id, provider_id, hotel_id, 
      remark, created, modified, 
      mod_user_id)
    values (#{saleRuleId,jdbcType=INTEGER}, #{providerId,jdbcType=INTEGER}, #{hotelId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, 
      #{modUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.distinct.hotel.sale.model.HotelRemark" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hotel_remark
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="saleRuleId != null" >
        sale_rule_id,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="modified != null" >
        modified,
      </if>
      <if test="modUserId != null" >
        mod_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="saleRuleId != null" >
        #{saleRuleId,jdbcType=INTEGER},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="modUserId != null" >
        #{modUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distinct.hotel.sale.model.HotelRemarkExample" resultType="java.lang.Integer" >
    select count(*) from t_hotel_remark
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_hotel_remark
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.saleRuleId != null" >
        sale_rule_id = #{record.saleRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelId != null" >
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null" >
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modUserId != null" >
        mod_user_id = #{record.modUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_hotel_remark
    set id = #{record.id,jdbcType=INTEGER},
      sale_rule_id = #{record.saleRuleId,jdbcType=INTEGER},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      mod_user_id = #{record.modUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distinct.hotel.sale.model.HotelRemark" >
    update t_hotel_remark
    <set >
      <if test="saleRuleId != null" >
        sale_rule_id = #{saleRuleId,jdbcType=INTEGER},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="modUserId != null" >
        mod_user_id = #{modUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distinct.hotel.sale.model.HotelRemark" >
    update t_hotel_remark
    set sale_rule_id = #{saleRuleId,jdbcType=INTEGER},
      provider_id = #{providerId,jdbcType=INTEGER},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      mod_user_id = #{modUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- this is the method for selectedListBySaleRuleId -->
  <select id="selectedListBySaleRuleId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hotel_remark
    where sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
  </select>
  <!-- this is the method for selectedByHotelIdAndSaleRuleId -->
  <select id="selectedByHotelIdAndSaleRuleId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hotel_remark
   
    where hotel_id = #{hotelId,jdbcType=INTEGER}
    and sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
  </select>
  <!-- this is the method for deleteHotelRemarkByHotelIdAndSaleRuleIdAP -->
  <delete id="deleteHotelRemarkByHotelIdAndSaleRuleIdAP" parameterType="java.lang.Integer" >
    delete from t_hotel_remark
    where hotel_id = #{hotelId,jdbcType=INTEGER}
    and sale_rule_id = #{saleRuleId,jdbcType=INTEGER}
    and provider_id = #{providerId,jdbcType=INTEGER}
  </delete>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distinct.hotel.order.dao.UserConfigMapper">
	<resultMap id="BaseResultMap" type="com.distinct.hotel.order.model.UserConfig">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="config_type" property="configType" jdbcType="INTEGER" />
		<result column="config_id" property="configId" jdbcType="INTEGER" />
		<result column="user_no" property="userNo" jdbcType="VARCHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
		<result column="created" property="created" jdbcType="TIMESTAMP" />
		<result column="modified" property="modified" jdbcType="TIMESTAMP" />
		<result column="mod_user_id" property="modUserId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, config_type, config_id, user_no, user_pwd, created,
		modified,
		mod_user_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.distinct.hotel.order.model.UserConfigExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_user_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user_config
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_user_config
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.distinct.hotel.order.model.UserConfigExample">
		delete from t_user_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.distinct.hotel.order.model.UserConfig">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_user_config (config_type, config_id, user_no,
		user_pwd,
		created, modified,
		mod_user_id)
		values (#{configType,jdbcType=INTEGER},
		#{configId,jdbcType=INTEGER},
		#{userNo,jdbcType=VARCHAR},
		#{userPwd,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP},
		#{modified,jdbcType=TIMESTAMP},
		#{modUserId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.distinct.hotel.order.model.UserConfig">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_user_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="configType != null">
				config_type,
			</if>
			<if test="configId != null">
				config_id,
			</if>
			<if test="userNo != null">
				user_no,
			</if>
			<if test="userPwd != null">
				user_pwd,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modified != null">
				modified,
			</if>
			<if test="modUserId != null">
				mod_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="configType != null">
				#{configType,jdbcType=INTEGER},
			</if>
			<if test="configId != null">
				#{configId,jdbcType=INTEGER},
			</if>
			<if test="userNo != null">
				#{userNo,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				#{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				#{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="modUserId != null">
				#{modUserId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.distinct.hotel.order.model.UserConfigExample"
		resultType="java.lang.Integer">
		select count(*) from t_user_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_user_config
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.configType != null">
				config_type = #{record.configType,jdbcType=INTEGER},
			</if>
			<if test="record.configId != null">
				config_id = #{record.configId,jdbcType=INTEGER},
			</if>
			<if test="record.userNo != null">
				user_no = #{record.userNo,jdbcType=VARCHAR},
			</if>
			<if test="record.userPwd != null">
				user_pwd = #{record.userPwd,jdbcType=VARCHAR},
			</if>
			<if test="record.created != null">
				created = #{record.created,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modified != null">
				modified = #{record.modified,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modUserId != null">
				mod_user_id = #{record.modUserId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_user_config
		set id = #{record.id,jdbcType=INTEGER},
		config_type = #{record.configType,jdbcType=INTEGER},
		config_id =
		#{record.configId,jdbcType=INTEGER},
		user_no =
		#{record.userNo,jdbcType=VARCHAR},
		user_pwd =
		#{record.userPwd,jdbcType=VARCHAR},
		created =
		#{record.created,jdbcType=TIMESTAMP},
		modified =
		#{record.modified,jdbcType=TIMESTAMP},
		mod_user_id =
		#{record.modUserId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.distinct.hotel.order.model.UserConfig">
		update t_user_config
		<set>
			<if test="configType != null">
				config_type = #{configType,jdbcType=INTEGER},
			</if>
			<if test="configId != null">
				config_id = #{configId,jdbcType=INTEGER},
			</if>
			<if test="userNo != null">
				user_no = #{userNo,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				user_pwd = #{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="modUserId != null">
				mod_user_id = #{modUserId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.distinct.hotel.order.model.UserConfig">
		update
		t_user_config
		set config_type = #{configType,jdbcType=INTEGER},
		config_id = #{configId,jdbcType=INTEGER},
		user_no =
		#{userNo,jdbcType=VARCHAR},
		user_pwd = #{userPwd,jdbcType=VARCHAR},
		created = #{created,jdbcType=TIMESTAMP},
		modified =
		#{modified,jdbcType=TIMESTAMP},
		mod_user_id =
		#{modUserId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectListByUserIdNConfigType" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_config
		where
		mod_user_id = #{userId,jdbcType=INTEGER}
		and
		config_type = #{configType,jdbcType=INTEGER}
	</select>

	<select id="selectUserConfigByUserIdNConfigTypeNConfigId"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_config
		where
		mod_user_id = #{userId,jdbcType=INTEGER}
		and
		config_type = #{configType,jdbcType=INTEGER}
		and
		config_id =
		#{configId,jdbcType=INTEGER}
	</select>

</mapper>